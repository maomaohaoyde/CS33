	.file	"redirect.c"
	.local	argv0
	.comm	argv0,8,8
	.section	.rodata
.LC0:
	.string	"500 Internal Error"
	.align 8
.LC1:
	.string	"Status: %s\nContent-type: text/html\n\n<HTML><HEAD><TITLE>%s</TITLE></HEAD>\n<BODY><H2>%s</H2>\nSomething unusual went wrong during a redirection request:\n<BLOCKQUOTE>\n%s\n</BLOCKQUOTE>\n</BODY></HTML>\n"
	.text
	.type	internal_error, @function
internal_error:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	$.LC0, -8(%rbp)
	movq	-24(%rbp), %rsi
	movq	-8(%rbp), %rcx
	movq	-8(%rbp), %rdx
	movq	-8(%rbp), %rax
	movq	%rsi, %r8
	movq	%rax, %rsi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	internal_error, .-internal_error
	.section	.rodata
.LC2:
	.string	"404 Not Found"
	.align 8
.LC3:
	.string	"Status: %s\nContent-type: text/html\n\n<HTML><HEAD><TITLE>%s</TITLE></HEAD>\n<BODY><H2>%s</H2>\nThe requested filename, %s, is set up to be redirected to another URL;\nhowever, the new URL has not yet been specified.\n</BODY></HTML>\n"
	.text
	.type	not_found, @function
not_found:
.LFB3:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	$.LC2, -8(%rbp)
	movq	-24(%rbp), %rsi
	movq	-8(%rbp), %rcx
	movq	-8(%rbp), %rdx
	movq	-8(%rbp), %rax
	movq	%rsi, %r8
	movq	%rax, %rsi
	movl	$.LC3, %edi
	movl	$0, %eax
	call	printf
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	not_found, .-not_found
	.section	.rodata
.LC4:
	.string	"Moved"
	.align 8
.LC5:
	.string	"Location: %s\nContent-type: text/html\n\n<HTML><HEAD><TITLE>%s</TITLE></HEAD>\n<BODY><H2>%s</H2>\nThe requested filename, %s, has moved to a new URL:\n<A HREF=\"%s\">%s</A>.\n</BODY></HTML>\n"
	.text
	.type	moved, @function
moved:
.LFB4:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	$.LC4, -8(%rbp)
	subq	$8, %rsp
	movq	-32(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-8(%rbp), %rcx
	movq	-8(%rbp), %rdx
	movq	-32(%rbp), %rax
	pushq	-32(%rbp)
	movq	%rdi, %r9
	movq	%rsi, %r8
	movq	%rax, %rsi
	movl	$.LC5, %edi
	movl	$0, %eax
	call	printf
	addq	$16, %rsp
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	moved, .-moved
	.section	.rodata
.LC6:
	.string	"SCRIPT_NAME"
	.align 8
.LC7:
	.string	"Couldn't get SCRIPT_NAME environment variable."
.LC8:
	.string	"PATH_INFO"
.LC9:
	.string	"Out of memory."
.LC10:
	.string	"%s%s"
.LC11:
	.string	"r"
.LC12:
	.string	".redirects"
	.align 8
.LC13:
	.string	"Couldn't open .redirects file."
.LC14:
	.string	" \t"
.LC15:
	.string	"%[^ \t\n] %[^ \t\n]"
	.text
	.globl	main
	.type	main, @function
main:
.LFB5:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	pushq	%rbx
	subq	$15096, %rsp
	.cfi_offset 3, -24
	movl	%edi, -15092(%rbp)
	movq	%rsi, -15104(%rbp)
	movq	%fs:40, %rax
	movq	%rax, -24(%rbp)
	xorl	%eax, %eax
	movq	-15104(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, argv0(%rip)
	movl	$.LC6, %edi
	call	getenv
	movq	%rax, -15080(%rbp)
	cmpq	$0, -15080(%rbp)
	jne	.L5
	movl	$.LC7, %edi
	call	internal_error
	movl	$1, %edi
	call	exit
.L5:
	movl	$.LC8, %edi
	call	getenv
	movq	%rax, -15072(%rbp)
	cmpq	$0, -15072(%rbp)
	je	.L6
	movq	-15080(%rbp), %rax
	movq	%rax, %rdi
	call	strlen
	movq	%rax, %rbx
	movq	-15072(%rbp), %rax
	movq	%rax, %rdi
	call	strlen
	addq	%rbx, %rax
	addq	$1, %rax
	movq	%rax, %rdi
	call	malloc
	movq	%rax, -15064(%rbp)
	cmpq	$0, -15064(%rbp)
	jne	.L7
	movl	$.LC9, %edi
	call	internal_error
	movl	$1, %edi
	call	exit
.L7:
	movq	-15072(%rbp), %rcx
	movq	-15080(%rbp), %rdx
	movq	-15064(%rbp), %rax
	movl	$.LC10, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	sprintf
	movq	-15064(%rbp), %rax
	movq	%rax, -15080(%rbp)
.L6:
	movl	$.LC11, %esi
	movl	$.LC12, %edi
	call	fopen
	movq	%rax, -15056(%rbp)
	cmpq	$0, -15056(%rbp)
	jne	.L9
	movl	$.LC13, %edi
	call	internal_error
	movl	$1, %edi
	call	exit
.L12:
	leaq	-15040(%rbp), %rax
	movl	$35, %esi
	movq	%rax, %rdi
	call	strchr
	movq	%rax, -15064(%rbp)
	cmpq	$0, -15064(%rbp)
	je	.L10
	movq	-15064(%rbp), %rax
	movb	$0, (%rax)
.L10:
	leaq	-15040(%rbp), %rax
	movq	%rax, -15064(%rbp)
	movq	-15064(%rbp), %rax
	movl	$.LC14, %esi
	movq	%rax, %rdi
	call	strspn
	addq	%rax, -15064(%rbp)
	movq	-15064(%rbp), %rax
	movzbl	(%rax), %eax
	testb	%al, %al
	je	.L9
	leaq	-5024(%rbp), %rcx
	leaq	-10032(%rbp), %rdx
	movq	-15064(%rbp), %rax
	movl	$.LC15, %esi
	movq	%rax, %rdi
	movl	$0, %eax
	call	__isoc99_sscanf
	cmpl	$2, %eax
	jne	.L9
	leaq	-10032(%rbp), %rax
	movl	$42, %esi
	movq	%rax, %rdi
	call	strchr
	movq	%rax, -15048(%rbp)
	cmpq	$0, -15048(%rbp)
	je	.L11
	movq	-15048(%rbp), %rdx
	leaq	-10032(%rbp), %rax
	subq	%rax, %rdx
	movq	%rdx, %rax
	movq	%rax, %rdx
	movq	-15080(%rbp), %rcx
	leaq	-10032(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	strncmp
	testl	%eax, %eax
	jne	.L11
	movq	-15048(%rbp), %rdx
	leaq	-10032(%rbp), %rax
	subq	%rax, %rdx
	movq	%rdx, %rax
	movq	%rax, %rdx
	movq	-15080(%rbp), %rax
	addq	%rax, %rdx
	leaq	-5024(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	strcat
	leaq	-5024(%rbp), %rdx
	movq	-15080(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	moved
	movl	$0, %edi
	call	exit
.L11:
	movq	-15080(%rbp), %rdx
	leaq	-10032(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	strcmp
	testl	%eax, %eax
	jne	.L9
	leaq	-5024(%rbp), %rdx
	movq	-15080(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	moved
	movl	$0, %edi
	call	exit
.L9:
	movq	-15056(%rbp), %rdx
	leaq	-15040(%rbp), %rax
	movl	$5000, %esi
	movq	%rax, %rdi
	call	fgets
	testq	%rax, %rax
	jne	.L12
	movq	-15080(%rbp), %rax
	movq	%rax, %rdi
	call	not_found
	movl	$1, %edi
	call	exit
	.cfi_endproc
.LFE5:
	.size	main, .-main
	.ident	"GCC: (GNU) 5.2.0"
	.section	.note.GNU-stack,"",@progbits
